import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.7.22'
}

group = 'com.me.group'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	// https://mvnrepository.com/artifact/org.postgresql/postgresql
	implementation 'org.postgresql:postgresql:42.1.4'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket:2.7.13'

	//Firebase
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	runtimeOnly 'com.h2database:h2'


	testImplementation("com.ninja-squad:springmockk:4.0.2")
	testImplementation ("org.springframework.boot:spring-boot-starter-test"){
		exclude(module : "mockito-core")
	}
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.withType(KotlinCompile).configureEach {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

